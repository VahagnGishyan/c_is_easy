
//////////////////////////////////////////////////////////

#ifndef SHORTEST_PATH_LEE_DETAILS_HPP
#define SHORTEST_PATH_LEE_DETAILS_HPP

//////////////////////////////////////////////////////////

#include <boost/graph/breadth_first_search.hpp>		// for breadth_first_search algorithm

//////////////////////////////////////////////////////////

#include "details.hpp"

//////////////////////////////////////////////////////////

#define SHORTEST_PATH_LEE_DETAILS_EXPORT C_IS_EASY_EXPORT

//////////////////////////////////////////////////////////

namespace c_is_easy
{
	namespace graph
	{
		namespace shortest_path
		{
			namespace details
			{
				struct SHORTEST_PATH_LEE_DETAILS_EXPORT break_search_lee : shortest_path::details::break_search {};
			}
		}
	}
}

//////////////////////////////////////////////////////////

#endif // !SHORTEST_PATH_LEE_DETAILS_HPP

//////////////////////////////////////////////////////////
